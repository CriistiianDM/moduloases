define(["block_ases/grader-utils","block_ases/grader-enums","block_ases/grader-service","block_ases/vendor-vue","block_ases/vendor-lodash"],function(e,t,a,d,s){var r={ADD_GRADE:"addGrade",DELETE_CATEGORY:"deleteCategory",ADD_ITEM:"addItem",ADD_CATEGORY:"addCategory",ADD_GRADE_TO_STUDENT:"addGradeToStudent",SET_STATE:"setAllState",SET_GRADE:"setGrade",SET_GRADES:"setGrades",SET_CATEGORY:"setCategory",SET_STUDENT_SORT_METHOD:"setStudentSortMethod",SET_SELECTED_CATEGORY_ID:"setSelectedCategoryId",SET_LEVELS:"setLevels",SET_ITEM:"setItem",DELETE_ITEM:"deleteItem",DELETE_GRADE:"deleteItemGrades"},l={FETCH_STATE:"fetchAllState",FILL_GRADES:"fillGrades",FILL_GRADES_FOR_NEW_ITEM:"fillGradesForNewItem",UPDATE_GRADE:"updateGrade",DELETE_ITEM:"deleteItem",DELETE_CATEGORY_CHILDS:"deleteCategoryChilds",UPDATE_CATEGORY:"setCategory",ADD_ITEM:"addItem",ADD_PARTIAL_EXAM:"addPartialExam",DELETE_CATEGORY:"deleteCategory",ADD_CATEGORY:"addCategory",UPDATE_ITEM:"setItem",DELETE_ITEM_GRADES:"deleteItemGrades"};return{store:{state:{decimalPlaces:2,additionalColumnsAtFirst:[{text:"CÃ³digo estudiante"},{text:"",hide:!0}],additionalColumnsAtEnd:[{text:"Nota final"}],sortStudentsMethodType:{name:t.sortStudentMethods.LAST_NAME,order:t.sortDirection.ASC},students:{},selectedCategoryId:null,items:{},categories:[],grades:{},levels:[],course:{fullname:"Nombre completo de el curso"},maxDisplayGrade:5,gradeDisplayRange:.5},mutations:{[r.DELETE_ITEM](e,t){d.delete(e.items,t)},[r.DELETE_CATEGORY](e,t){const a=e.categories.map(e=>e.id).indexOf(t);d.delete(e.categories,a)},[r.SET_STUDENT_SORT_METHOD](e,t){e.sortStudentsMethodType=t},[r.DELETE_GRADE](e,t){Object.keys(e.students).forEach(a=>{const s=e.students[a];d.set(e.students[a],"gradeIds",s.gradeIds.filter(e=>e!==t))}),d.delete(e.grades,t)},[r.ADD_ITEM](e,t){d.set(e.items,t.id,t)},[r.ADD_CATEGORY](e,t){e.categories.push(t)},[r.ADD_GRADE](t,a){a.id=e.ID();let s=t.students[a.userid],r=s.gradeIds?s.gradeIds:[];d.set(t.grades,a.id,a),d.set(t.students[s.id],"gradeIds",[...r,a.id])},[r.ADD_GRADE_TO_STUDENT](e,t){let a=t.grade,s=t.studentId,r=e.students[s],i=r.gradeIds?r.gradeIds:[];d.set(e.students[s],"gradeIds",[...i,a.id])},[r.SET_ITEM](e,t){d.set(e.items,t.id,t)},[r.SET_LEVELS](e,t){e.levels=t},[r.SET_CATEGORY](e,t){let a=e.categories.map(e=>e.id).indexOf(t.id);d.set(e.categories,a,t)},[r.SET_GRADES](t,a){a.forEach(a=>{const s=Object.values(t.grades).find(e=>e.itemid===a.itemid&&e.userid===a.userid);if(a.finalgrade=e.removeInsignificantTrailZeros(a.finalgrade),s.finalgrade!=a.finalgrade){if(console.log("nel prro"),!t.grades[a.id]){t.grades[a.id]=a;const e=[...t.students[s.userid].gradeIds.filter(e=>e!==s.id),a.id];t.students[a.userid]={...t.students[a.userid],gradeIds:e},d.delete(t.grades,s.id)}d.set(t.grades,a.id,a)}})},[r.SET_GRADE](t,a){let s=a.old,r=a.new;if(r.finalgrade=e.removeInsignificantTrailZeros(r.finalgrade),t.grades[r.id]=r,s&&s.id!==r.id){const e=[...t.students[s.userid].gradeIds.filter(e=>e!==s.id),r.id];t.students[s.userid]={...t.students[s.userid],gradeIds:e},d.delete(t.grades,s.id)}},[r.SET_SELECTED_CATEGORY_ID](e,t){e.selectedCategoryId=t},[r.SET_STATE](t,a){t.levels=a.levels;let d={};a.students.forEach(e=>{d[e.id]=e}),t.students=d;let s={};a.items.forEach(e=>{s[e.id]=e}),t.items=s,t.categories=a.categories;let r={};a.grades.forEach(t=>{r[t.id]={...t,finalgrade:e.removeInsignificantTrailZeros(t.finalgrade)}}),t.grades=r,t.course=a.course}},actions:{[l.DELETE_ITEM]({commit:e,dispatch:t,state:d},s){a.delete_item(s).then(a=>{e(r.SET_LEVELS,a.levels),e(r.DELETE_ITEM,s),t(l.DELETE_ITEM_GRADES,s)})},[l.ADD_ITEM]({commit:e,dispatch:t},d){a.add_item(d).then(a=>{e(r.ADD_ITEM,a.item),e(r.SET_LEVELS,a.levels),t(l.FILL_GRADES_FOR_NEW_ITEM,a.item)})},[l.DELETE_ITEM_GRADES]({commit:e,state:t},a){let d=Object.keys(t.grades),s=[];d.forEach(e=>{t.grades[e].itemid===a&&s.push(e)}),s.forEach(t=>{e(r.DELETE_GRADE,t)})},[l.ADD_PARTIAL_EXAM]({commit:e,getters:t},d){a.add_partial_exam(d).then(t=>{e(r.SET_LEVELS,t.levels),e(r.ADD_CATEGORY,t.category),e(r.ADD_ITEM,t.partial_item),e(r.ADD_ITEM,t.optional_item)})},[l.DELETE_CATEGORY_CHILDS]({commit:e,getters:t,dispatch:a},d){const s=t.categoryChildItems(d),i=t.categoryChildCategories(d);s.forEach(t=>{e(r.DELETE_ITEM,t.id),a(l.DELETE_ITEM_GRADES,t.id)}),i.forEach(t=>{e(r.DELETE_CATEGORY,t.id)})},[l.DELETE_CATEGORY]({commit:e,getters:t,dispatch:d},s){a.delete_category(s).then(t=>{e(r.SET_LEVELS,t.levels),d(l.DELETE_CATEGORY_CHILDS,s),e(r.DELETE_CATEGORY,s)})},[l.FILL_GRADES_FOR_NEW_ITEM]({commit:e,state:t,getters:a},d){Object.keys(t.students).forEach(t=>{let a={userid:t,itemid:d.id,finalgrade:null,rawgrademin:d.grademin,rawgrademax:d.grademax};e(r.ADD_GRADE,a)})},[l.FILL_GRADES]({commit:e,state:t,getters:a}){let d=Object.keys(t.students),s=Object.values(t.grades);d.forEach(d=>{for(var i of a.itemOrderIds){let a=t.items[i],l=s.find(e=>e.userid===d&&e.itemid===a.id);if(l)e(r.ADD_GRADE_TO_STUDENT,{studentId:d,grade:l});else{let t={userid:d,itemid:a.id,finalgrade:null,rawgrademin:a.grademin,rawgrademax:a.grademax};e(r.ADD_GRADE,t)}}})},[l.UPDATE_GRADE]({commit:e,state:t},d){a.update_grade(d,t.course.id).then(t=>{e(r.SET_GRADES,t.other_grades)})},[l.UPDATE_CATEGORY]({dispatch:e,commit:t},d){a.update_category(d).then(e=>{let a=e.category,d=e.levels;t(r.SET_CATEGORY,a),t(r.SET_LEVELS,d)})},[l.ADD_CATEGORY]({commit:e,state:t,dispatch:d},s){a.add_category(s.category,s.weight).then(t=>{let a=t.category,s=t.category_item,i=t.levels;e(r.ADD_ITEM,s),e(r.ADD_CATEGORY,a),e(r.SET_LEVELS,i),d(l.FILL_GRADES_FOR_NEW_ITEM,s)})},[l.UPDATE_ITEM]({dispatch:e,commit:t},d){a.update_item(d).then(e=>{let a=e.item,d=e.levels;t(r.SET_ITEM,a),t(r.SET_LEVELS,d),t(r.SET_GRADES,e.other_grades)})},[l.FETCH_STATE]({dispatch:t,commit:d}){a.get_grader_data(e.getCourseId()).then(e=>{d(r.SET_STATE,e),t(l.FILL_GRADES)})}},getters:{courseLevel:e=>e.levels[0]?e.levels[0][0]:[],selectedCategory:(e,t)=>t.categoryById(e.selectedCategoryId),itemLevel:e=>e.levels[e.levels.length-1],categoryLevels:e=>{let t=e.levels.slice(1,e.levels.length-1);return t||[]},itemsCount:e=>Object.keys(e.items).length,categoryById:e=>t=>e.categories.find(e=>e.id===t),studentById:e=>t=>e.students[t],studentSetSorted:(e,a)=>(function(e,a){switch(a.name){case t.sortStudentMethods.FIRST_NAME:return s.orderBy(e,["firstname"],a.order);case t.sortStudentMethods.LAST_NAME:return s.orderBy(e,["lastname"],a.order)}})(a.studentSet,e.sortStudentsMethodType),studentSet:e=>Object.values(e.students),studentsCount:e=>Object.keys(e.students).length,studentsAsesCount:(e,t)=>t.studentSet.filter(e=>e.is_ases).length,itemSet:e=>Object.values(e.items),itemOrderIds:(e,t)=>{let a=t.itemLevel;return a?a.map(e=>e.object.id):Object.keys(e.items)},itemOrderedNames:(e,t)=>{let a=t.itemLevel;return a?a.map(e=>null===e.object.itemname||""===e.object.itemname?"Total "+t.categoryById(e.object.iteminstance).fullname:e.object.itemname):Object.keys(e.items)},finalGradeId:(e,t)=>t.itemOrderIds[t.itemOrderIds.length-1],categoryChildItems:(e,t)=>e=>{let a=t.itemSet.filter(t=>t.categoryid===e||t.iteminstance===e);return Array.isArray(a)?a:[]},categoryChildCategories:e=>t=>{let a=e.categories.filter(e=>e.parent===t);return a||[]},categoryChildSize:(e,t)=>e=>{let a=t.categoryChildItems(e),d=t.categoryChildCategories(e);return a.length+d.length},categoryDepth:e=>{if(e.categories.length<=0)return 0;var t=e.categories.map(e=>e.depth);return Math.max.apply(Math,t)},getCategoriesByDepth:e=>t=>e.categories.find(e=>e.depth===t),gradesSet:e=>Object.values(e.grades),gradesByItemId:(e,t)=>e=>t.gradesSet.filter(t=>t.itemid===e),passingGrades:(e,t)=>t.gradesSet.filter(e=>e.finalgrade>=.6*e.rawgrademax),passingGradesSet:(e,t)=>t.itemOrderIds.map(e=>t.gradesByItemId(e).filter(e=>e.finalgrade>=.6*e.rawgrademax).length),failingGrades:(e,t)=>t.gradesSet.filter(e=>e.finalgrade<.6*e.rawgrademax&&null!=e.finalgrade),failingGradesSet:(e,t)=>t.itemOrderIds.map(e=>t.gradesByItemId(e).filter(e=>e.finalgrade<.6*e.rawgrademax&&null!=e.finalgrade).length),nullGrades:(e,t)=>t.gradesSet.filter(e=>null===e.finalgrade||void 0===e.finalgrade),nullGradesSet:(e,t)=>t.itemOrderIds.map(e=>t.gradesByItemId(e).filter(e=>null===e.finalgrade||void 0===e.finalgrade).length),passingGradesCount:(e,t)=>t.passingGrades.length,failingGradesCount:(e,t)=>t.failingGrades.length,nullGradesCount:(e,t)=>t.nullGrades.length,finalGradesSet:(e,t)=>t.gradesSet.filter(e=>e.itemid===t.finalGradeId),finalPassingGradeSet:(e,t)=>t.finalGradesSet.filter(e=>e.finalgrade>=.6*e.rawgrademax),lineGraphLabel:e=>{let t=[],a=e.maxDisplayGrade/e.gradeDisplayRange,d=0,s="";for(i=0;i<a-1;i++)s=d+" - ",s+=(d+=e.gradeDisplayRange)-.1,t.push(s);return s=d+" - "+e.maxDisplayGrade,t.push(s),t},getGradesByRange:(e,t)=>{let a=0,d=e.gradeDisplayRange,s=[],r=e.maxDisplayGrade/e.gradeDisplayRange,l=t.finalGradesSet.map(t=>t.finalgrade/t.rawgrademax*e.maxDisplayGrade);for(i=0;i<r-1;i++)s.push(l.filter(e=>e>=a&&e<d).length),a+=e.gradeDisplayRange,d+=e.gradeDisplayRange;return s.push(l.filter(e=>e>=a).length),s}}},mutations:r,actions:l}});